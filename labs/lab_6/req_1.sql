---1------------------------------------------------------------
-- Добавить в таблицу «Объекты недвижимости» колонку, которая 
-- будет хранить стоимость 1 м2. Создать триггер, который будет 
-- автоматически рассчитывать и записывать стоимость объекта 
-- недвижимости при добавлении новой записи (значение поля 
-- «Стоимость» не указывать).
----------------------------------------------------------------
ALTER TABLE objects 
	ADD COLUMN cost_per_m2 double precision;

CREATE OR REPLACE FUNCTION lab_6_ex1()
RETURNS TRIGGER AS
$$
	BEGIN
	NEW.cost = NEW.square * NEW.cost_per_m2;
	RETURN NEW;
	END;
$$ LANGUAGE PLpgsql;

CREATE OR REPLACE TRIGGER lab_6_ex2
BEFORE INSERT OR UPDATE
ON objects
FOR EACH ROW
EXECUTE FUNCTION lab_6_ex1();

INSERT INTO objects
(square,cost_per_m2)
VALUES
(2,50)

SELECT * FROM objects

---2------------------------------------------------------------
-- В таблицу «Риэлторы» добавить колонку «Паспортные данные». 
-- Создать триггер, который будет проверять корректность 
-- паспортных данных по маске: ХХХХ УУУУУУ, 
-- где Х – серия паспорта, У – номер паспорта. 
-- Между серией и номером паспорта пробел. При несоответствии 
-- вводимой информации маске, выводитьсообщение.
----------------------------------------------------------------
ALTER TABLE realtors
	ADD COLUMN passport character varying(11);
	
CREATE OR REPLACE FUNCTION lab_6_ex_2()
RETURNS TRIGGER AS 
$$
	BEGIN
		IF NEW.passport NOT LIKE '____ ______' THEN 
			RAISE EXCEPTION 'ERROR! Invalid passport input.';
		END IF;
		RETURN NEW;
	END;
$$ LANGUAGE PLpgsql;

CREATE OR REPLACE TRIGGER lab_6_ex_2
BEFORE INSERT OR UPDATE 
ON realtors
FOR EACH ROW
EXECUTE FUNCTION lab_6_ex_2();

insert into realtors
(passport)
values
('aaaaa aaaaa')

---3------------------------------------------------------------
-- Создать триггер, который при добавлении нового риэлтора 
-- формат телефона:79996667788 преобразует в: +7 (999) 666 77 88
----------------------------------------------------------------
ALTER TABLE REALTORS 
	ALTER COLUMN contacts TYPE character varying(24);

CREATE OR REPLACE FUNCTION lab_6_ex_3()
RETURNS TRIGGER AS 
$$
	BEGIN
		NEW.contacts = 
		CONCAT('+',substr(NEW.contacts,1,1),
			  ' (', substr(NEW.contacts,2,3),') ',
			  substr(NEW.contacts,5,3), ' ',
			  substr(NEW.contacts,8,2), ' ',
			  substr(NEW.contacts,10,2), ' ');
		RETURN NEW;
	END;
$$ LANGUAGE PLpgsql;

CREATE OR REPLACE TRIGGER lab_6_ex_3
BEFORE INSERT OR UPDATE 
ON realtors
FOR EACH ROW
EXECUTE FUNCTION lab_6_ex_3();

INSERT INTO realtors
(contacts)
VALUES
(79992223311);

SELECT * FROM realtors;

---4------------------------------------------------------------
-- Создать триггер, который будет проверять соответствие 
-- добавляемой оценки определенному диапазону [0,X].
----------------------------------------------------------------

---5------------------------------------------------------------
-- Создать триггер, который при добавлении новой продажи, 
-- выводит сообщение, если хотя бы по одному критерию 
-- данный объект имеет оценку ниже Х.
----------------------------------------------------------------

---6------------------------------------------------------------
-- Создать таблицу, которая следующие сведения: дата, время, 
-- операция (добавления, обновление, удаление данных),
-- пользователь (текущий пользовать в СУБД). Добавить триггер, 
-- который при изменении данных в таблице «Продажи», будет 
-- фиксировать такое события в таблице-журнале.
----------------------------------------------------------------

---7------------------------------------------------------------
-- Создать триггер, который при добавлении нового риэлтора будет 
-- проверять корректность фамилии, имени, отчество (наличие 
-- только букв, первая буква прописная). При несоответствии, 
-- выводить сообщение.
----------------------------------------------------------------
